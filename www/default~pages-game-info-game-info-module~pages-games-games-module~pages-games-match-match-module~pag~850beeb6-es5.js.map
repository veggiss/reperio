{"version":3,"sources":["./src/app/services/globals.ts"],"names":[],"mappings":"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","file":"default~pages-game-info-game-info-module~pages-games-games-module~pages-games-match-match-module~pag~850beeb6-es5.js","sourcesContent":["import database from \"./database.json\";\r\n\r\nexport const GAMES_LIST = [{\r\n\tid: 1,\r\n\tcategory: 1,\r\n\ttitle: 'Match - bilde',\r\n\ticon: 'book',\r\n\tdescription: 'Dette er en forklaring pÃ¥ innholdet i spillet og sikkert andre ting tingeling',\r\n\tthumbnail: './assets/img/thumbnail_match.png'\r\n}];\r\n\r\nexport const categories = {\r\n\t1: {\r\n\t\ttype: 'lese',\r\n\t\ticon: 'book'\r\n\t},\r\n\t2: {\r\n\t\ttype: 'skrive',\r\n\t\ticon: 'create'\r\n\t},\r\n\t3: {\r\n\t\ttype: 'lytte',\r\n\t\ticon: 'volume-high'\r\n\t},\r\n\t4: {\r\n\t\ttype: 'hjernetrim',\r\n\t\ticon: 'pulse'\r\n\t}\r\n};\r\n\r\nexport const getGame = (id:number) => GAMES_LIST.filter(e => e.id === id);\r\n\r\n//TODO: Add this to storage\r\nexport let favorites = [3, 1];\r\nexport let difficulty = 1.5;\r\n\r\nexport const correctDifficulty = (correctAnswers, rounds) => {\r\n\tlet winnRate:number = (correctAnswers/rounds)*100;\r\n\r\n\tconsole.log('winnRate: ' + winnRate);\r\n\tconsole.log('old complexity: ' + difficulty);\r\n\t\r\n\tif (winnRate <= 10) {\r\n\t\tdifficulty -= 0.3;\r\n\t} else if (winnRate > 10 && winnRate <= 25) {\r\n\t\tdifficulty -= 0.2;\r\n\t} else if (winnRate > 25 && winnRate <= 50) {\r\n\t\tdifficulty -= 0.1;\r\n\t} else if (winnRate > 50 && winnRate <= 75) {\r\n\t\tdifficulty += 0.1;\r\n\t} else if (winnRate > 75 && winnRate <= 90) {\r\n\t\tdifficulty += 0.2;\r\n\t} else if (winnRate > 90) {\r\n\t\tdifficulty += 0.3;\r\n\t}\r\n\t\r\n\tif (difficulty < 1) difficulty = 1;\r\n\telse if (difficulty > 3) difficulty = 3;\r\n\t\r\n\tconsole.log('new complexity: ' + difficulty);\r\n\t\r\n\tlocalStorage.setItem('difficulty', difficulty.toString());\r\n};\r\n\r\nexport const shuffle = array => {\r\n   for (let i = array.length - 1; i > 0; i--) {\r\n      let j = Math.floor(Math.random() * i);\r\n      let temp = array[i];\r\n      array[i] = array[j];\r\n      array[j] = temp;\r\n   }\r\n   \r\n   return array;\r\n};\r\n\r\n//TODO: this could probably be a bit cleaner\r\nexport const getMatchImage = (category: string, tags: any, complexRate: number, rounds: number) => {\r\n\tlet listByCategory = shuffle(database.filter(e => e.category === category));\r\n\tlet complexity;\r\n\tlet list = [];\r\n\t\r\n\tfor (let i = 0; i < rounds; i++) {\r\n\t\t//let imageComplexity = Math.floor((Math.random() * 3) + 1);\r\n\t\t\r\n\t\tif (i < Math.round((complexRate % 1) * rounds)) {\r\n\t\t\tcomplexity = Math.ceil(complexRate);\r\n\t\t} else {\r\n\t\t\tcomplexity = Math.floor(complexRate);\r\n\t\t}\r\n\t\t\r\n\t\tlet image = listByCategory.splice(Math.random() * listByCategory.length, 1)[0];\r\n\t\tconsole.log(`Finding image random image with complexity: ${image.complexity} and alternative with: ${complexity}`);\r\n\t\t\r\n\t\t/*let image = listByCategory.find((e, i, arr) => {\r\n\t\t\tif (e.complexity === imageComplexity) {\r\n\t\t\t\t\r\n\t\t\t\treturn arr.splice(i, 1);\r\n\t\t\t}\r\n\t\t});*/\r\n\t\t\r\n\t\tif (image) {\r\n\t\t\tlet alternatives = [image.alternatives[complexity - 1]];\r\n\t\t\timage['wrongalt' + complexity].forEach(e => alternatives.push(e));\r\n\t\t\t/*let alternativeList = [...listByCategory];\r\n\t\t\t\r\n\t\t\tfor (let idx = 0; idx < 3; idx++) {\r\n\t\t\t\tlet obj = alternativeList.splice(Math.floor(Math.random() * alternativeList.length), 1)[0];\r\n\t\t\t\t\r\n\t\t\t\tif (obj) {\r\n\t\t\t\t\talternatives.push(obj[\"alternatives\"][complexity - 1]);\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\t\r\n\t\t\t//if (alternatives.length === 4) {\r\n\t\t\t\tlist.push({\r\n\t\t\t\t\tsrc: image.src,\r\n\t\t\t\t\talternatives: shuffle(alternatives),\r\n\t\t\t\t\tanswer: image.alternatives[complexity - 1]\r\n\t\t\t\t})\r\n\t\t\t//}\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn shuffle(list);\r\n};"],"sourceRoot":""}